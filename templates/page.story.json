/*
 * ------------------------------------------------------------
 * IMPORTANT: The contents of this file are auto-generated.
 *
 * This file may be updated by the Shopify admin theme editor
 * or related systems. Please exercise caution as any changes
 * made to this file may be overwritten.
 * ------------------------------------------------------------
 */
{
  "sections": {
    "main": {
      "type": "main-page",
      "disabled": true,
      "settings": {
        "heading_size": "title-xl tracking-heading",
        "heading_alignment": "text-left",
        "heading_tag": "h1",
        "text_size": "text-base",
        "padding_top": 72,
        "padding_bottom": 120,
        "divider": false,
        "narrow": true,
        "rounded": false
      }
    },
    "video-with-text-overlay": {
      "type": "video-with-text-overlay",
      "settings": {
        "transparent_header": true,
        "video": "shopify://files/videos/DM_20250225094052_001.mp4",
        "video_url": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
        "description": "",
        "enable_video_autoplay": true,
        "enable_video_looping": true,
        "image_height": "750px",
        "content_width": "small",
        "content_position": "md:items-center md:justify-center",
        "text_alignment": "center",
        "video_url_mobile": "",
        "image_height_mobile": "auto",
        "content_position_mobile": "items-center justify-center",
        "text_alignment_mobile": "center",
        "color_text": "#ffffff",
        "color_highlight": "#e0a580",
        "gradient_highlight": "",
        "color_button_text": "#171717",
        "color_button_background": "#ffffff",
        "color_button_gradient": "",
        "color_overlay": "#f8f7f5",
        "overlay_opacity": 30,
        "padding_top": 0,
        "padding_bottom": 0,
        "divider": false,
        "full_width": true,
        "rounded": true
      }
    },
    "custom_liquid_wQbdfA": {
      "type": "custom-liquid",
      "name": "t:sections.custom-liquid.presets.name",
      "settings": {
        "liquid": "<style>\n        html {\n            margin: 0; /* 重置浏览器默认边距 */\n            padding: 0; /* 重置浏览器默认内边距 */\n            box-sizing: border-box; /* 现代盒模型，便于尺寸设置 */\n            font-size: 90%; /* 基础字体大小调整 */\n            scroll-snap-type: y mandatory; /* 在Y轴上强制滚动捕捉 */\n            /* 启用垂直方向的滚动捕捉 */\n        }\n\n        /* @layer support, demo; 已移除 */\n        /* 定义CSS层，用于控制样式优先级 (@layer 相关注释已移除) */\n\n        /* @keyframes textFade 曾在此处，因未被任何 CSS 规则使用而移除 */\n\n        /* 来自先前 @layer demo 的规则 */\n        /* .our-story-container .our-story-text:nth-of-type(1) { ... } */ /* 已注释掉，因为滚动链接动画由JS处理 */\n        /* ... 其他 :nth-of-type 规则也已注释掉 ... */\n        /* .our-story-container { timeline-scope: ... } */ /* 已注释掉，因为滚动链接动画由JS处理 */\n\n        .rotateItem {\n            /* animation: fade ease both; */ /* rotateItem 的 CSS 动画已被 JavaScript 禁用 */\n            /* animation-range: contain; */ /* rotateItem 的 CSS 动画已被 JavaScript 禁用 */\n        }\n\n        /* .rotateItem-1 { ... } */ /* rotateItem-N 的特定动画规则已被 JavaScript 禁用 */\n        /* ... 其他 .rotateItem-N 规则也已注释掉 ... */\n\n        /* 来自先前 @layer support.demo 的规则 */\n        .our-story-container {\n            /* 故事章节和旋转图片的主容器 */\n            /* 合并自之前的 @layer support.demo 的两个块 */\n            display: grid; /* 使用 CSS Grid 进行布局 */\n            grid-auto-rows: 100svh; /* 每行占据完整的视口高度 */\n            /* 每行高度为100%视口高度 */\n            grid-template-columns: 1fr 1fr; /* 两列等宽 */\n            /* 两列等宽布局 */\n            /* gap: var(--size-7); */ /* 网格项之间的间隙 (当前已注释掉) */\n            place-items: center; /* 将项目在其网格单元中居中 */\n            position: relative; /* 建立定位上下文 */\n            max-inline-size: 1600px; /* 容器的最大宽度 */\n            margin-inline: auto; /* 水平居中容器 */\n            /* width: 100vw; */ /* 备选的完整视口宽度 (当前已注释掉) */\n            /* 容器宽度为100%视口宽度 */\n        }\n\n        @media (width <=1080px) {\n            /* 针对宽度小于等于1080px的屏幕的响应式调整 */\n            .our-story-container {\n                padding-inline: 2.5rem; /* 在较小屏幕上添加水平内边距 */\n                /* 在小屏幕上添加内边距 */\n            }\n        }\n\n        .our-story-container .our-story-text {\n            /* 主容器内文本部分的样式 */\n            grid-column: 1 / 2; /* 文本占据第一列 */\n            /* 文本部分占据第一列 */\n        }\n\n        .our-story-container .our-story-text:nth-of-type(1) {\n            /* 针对第一个文本部分的特定规则 */\n            grid-row: 1; /* 将第一个文本部分放在第一行 */\n            /* 第一个文本部分在第一行 */\n        }\n\n        .textItem {\n            /* 单个文本项 (<h1>, <h2> 等) 的样式 */\n            text-wrap: balance; /* 通过平衡行来改善文本布局 */\n            /* 文本换行平衡 */\n            font-size: 1.5rem; /* 文本项的字体大小 */\n            margin-inline: 0 auto; /* 如果文本项是块级元素且宽度小于容器，则将其居中 */\n        }\n\n        .textItem div {\n            /* 用于 .textItem 内渐变文本效果的 <div> 元素的样式 */\n            display: inline; /* 允许渐变文本与周围文本一起流动 */\n            font-family: var(--font-body-family);\nline-height:1.6;\n        }\n\n        .gradient-text-11 {\n            /* 第一种渐变文本的样式 */\n            background: linear-gradient(to top right in oklab,\n                    oklch(55% .45 350),\n                    oklch(95% .4 95)) fixed; /* 定义渐变背景 */\n            /* 第一种渐变文本背景 */\n            -webkit-background-clip: text; /* 将背景裁剪为文本形状 */\n            -webkit-text-fill-color: transparent; /* 使文本颜色透明以显示背景 */\n        }\n\n        .gradient-text-21 { /* 第二种渐变文本的样式 */\n            background: linear-gradient(to top right in oklch,\n                    oklch(75% 0.5 156),\n                    oklch(70% 0.5 261)) fixed;\n            /* 第二种渐变文本背景 */\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n\n        .gradient-text-31 { /* 第三种渐变文本的样式 */\n            background: linear-gradient(to bottom in oklch,\n                    oklch(75% 0.5 156),\n                    oklch(70% 0.5 261)) fixed;\n            /* 第三种渐变文本背景 */\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n\n        .gradient-text-41 { /* 第四种渐变文本的样式 */\n            background: linear-gradient(to top in oklab,\n                    oklch(60% .5 353) 0%,\n                    oklch(80% 0.5 271) 100%) fixed;\n            /* 第四种渐变文本背景 */\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n\n        .gradient-text-51 { /* 第五种渐变文本的样式 */\n            background: linear-gradient(to bottom right in lch,\n                    color(display-p3 25% 25% 100%) 0%,\n                    color(display-p3 100% 85% 30%) 100%) fixed;\n            /* 第五种渐变文本背景 */\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n        }\n\n        .our-story-wrapper {\n            /* 旋转图片元素的容器 */\n            grid-column: 2; /* 包裹容器占据第二列 */\n            /* 占据第二列 */\n            grid-row: 1; /* 包裹容器位于第一行 (由于粘性定位，可以跨越多个文本部分) */\n            display: grid; /* 使用 CSS Grid 进行其内部布局 */\n            position: sticky; /* 使包裹容器在滚动期间固定在视口顶部 */\n            /* 粘性定位 */\n            top: 10svh; /* 粘性定位距离顶部的偏移量 */\n            right: 0; /* 右对齐 (与定位上下文相关) */\n            /* height: 80svh; */ /* 固定高度 (当前已注释掉，高度现在是固有的或通过子元素 .rotateItem 决定) */\n            /* 高度为80%视口高度 */\n            align-items: center; /* 在此包裹容器内垂直对齐 .rotateItem */\n            /* 垂直居中 */\n            /* 设定宽高比为3:4 */\n            /* aspect-ratio: 3/4; */ /* 宽高比 (当前已注释掉) */\n        }\n\n        .our-story-wrapper .rotateItem {\n            /* 单个旋转图片容器的样式 */\n            grid-area: 1 / 1; /* 将所有 rotateItems 放置在同一个网格单元中以实现叠加效果 */\n            backface-visibility: hidden; /* 在3D变换期间隐藏元素的背面以提高性能 */\n            display: grid; /* 使用网格在内部居中图片 */\n            align-items: center; /* 垂直居中子图片 */\n            justify-content: center; /* 水平居中子图片 */\n            height: 80vh; /* 旋转项的固定高度 */\n            width: 30vw; /* 旋转项的固定宽度 */\n            max-width: fit-content; /* 确保宽度不超过内容，除非 30vw 更大 */\n        }\n\n        .our-story-wrapper .rotateItem img {\n            /* .rotateItem 容器内图片的样式 */\n            width: 100%; /* 图片占据其父元素 .rotateItem 的全部宽度 */\n            height: 100%; /* 图片占据其父元素 .rotateItem 的全部高度 */\n            object-position: center; /* 如果宽高比不同，则在边界内居中图片 */\n            object-fit: cover; /* 覆盖区域，必要时裁剪以保持宽高比 */\n            /* 保持图片比例 */\n            border-radius: 1rem; /* 为图片应用圆角 */\n        }\n    </style>\n    <div class=\"our-story-container\">\n        <div class=\"our-story-wrapper\">\n            <div class=\"rotateItem rotateItem-1\">\n                <img src=\"https://cdn.shopify.com/s/files/1/0683/9065/0074/files/Mask_group_d0731a1b-5bb4-45f0-b078-6bb48f0bf1a2.png?v=1747203274\"\n                    alt=\"\" />\n            </div>\n            <div class=\"rotateItem rotateItem-2\">\n                <img src=\"https://cdn.shopify.com/s/files/1/0683/9065/0074/files/Mask_group_d0731a1b-5bb4-45f0-b078-6bb48f0bf1a2.png?v=1747203274\"\n                    alt=\"\" />\n            </div>\n            <div class=\"rotateItem rotateItem-3\">\n                <img src=\"https://cdn.shopify.com/s/files/1/0683/9065/0074/files/Mask_group_d0731a1b-5bb4-45f0-b078-6bb48f0bf1a2.png?v=1747203274\"\n                    alt=\"\" />\n            </div>\n            <div class=\"rotateItem rotateItem-4\">\n                <img src=\"https://cdn.shopify.com/s/files/1/0683/9065/0074/files/Mask_group_d0731a1b-5bb4-45f0-b078-6bb48f0bf1a2.png?v=1747203274\"\n                    alt=\"\" />\n            </div>\n            <div class=\"rotateItem rotateItem-5\">\n                <img src=\"https://cdn.shopify.com/s/files/1/0683/9065/0074/files/Mask_group_d0731a1b-5bb4-45f0-b078-6bb48f0bf1a2.png?v=1747203274\"\n                    alt=\"\" />\n            </div>\n        </div>\n        <div class=\"our-story-text\">\n            <h1 class=\"textItem\">\n                Anray Family &nbsp;<br/><br/>\n                <div class=\"gradient-text-1\">Introducing our founders As immigrants, my partner and I found \"our home\"\n                    in the United States, and through cooking and\n                    sharing meals with new friends, they became family in our hearts. That's why we started \"our home\":\n                    to make a bigger\n                    community. - Co-founder</div>\n            </h1>\n        </div>\n        <div class=\"our-story-text\">\n            <h2 class=\"textItem\">\n                Anray Family\n                <br/><br/><div class=\"gradient-text-2\">\n                    Introducing our founders As immigrants, my partner and I found \"our home\" in the United States, and\n                    through cooking and\n                    sharing meals with new friends, they became family in our hearts. That's why we started \"our home\": to\n                    make a bigger\n                </div>\n                \n            </h2>\n        </div>\n        <div class=\"our-story-text\">\n            <h3 class=\"textItem\">\n                Anray Family &nbsp;<br/><br/><div class=\"gradient-text-3\">Introducing our founders As immigrants, my partner and I found\n                    \"our home\" in the United States, and through cooking and\n                    </div>.\n            </h3>\n        </div>\n        <div class=\"our-story-text\">\n            <h4 class=\"textItem\">\n                Anray Family &nbsp;<br/><br/><div class=\"gradient-text-4\">Introducing our founders As immigrants, my partner and I found\n                    \"our home\" in the United States, and </div>.\n            </h4>\n        </div>\n        <div class=\"our-story-text\">\n            <h5 class=\"textItem\">\n                Anray Family &nbsp;<br/><br/><div class=\"gradient-text-5\">Introducing our founders As immigrants, my partner and I found\n                    \"our home\" in the United States, and through cooking and\n                    sharing meals with new friends, they became family in our hearts. That's why we started \"our home\":\n                    to make a bigger</div>.\n            </h5>\n        </div>\n    </div>\n    <script>\n        document.addEventListener('DOMContentLoaded', () => {\n            // DOM 元素选择\n            // 获取所有文本元素和旋转元素\n            const titleItems = Array.from(document.querySelectorAll('.our-story-container > .our-story-text')); // 触发图片动画的文本区域\n            const rotates = Array.from(document.querySelectorAll('.our-story-wrapper .rotateItem')); // 将要进行动画处理的图片容器\n\n            // 禁用 rotateItems 上的 CSS 动画，因为 JavaScript 将控制它们\n            // 禁用旋转元素上的CSS动画，让JS接管控制\n            rotates.forEach(items => {\n                items.style.animation = 'none'; // 移除任何 CSS 定义的动画\n                /* console.log(items); */ // 已移除 console.log\n            });\n\n            // 不透明度动画参数\n            // 定义不透明度的关键点\n            const opacityStops = [\n                { progress: 0, value: 0 },     // 开始时完全透明\n                { progress: 0.20, value: 1 },  // 在 20% 进度时淡入至完全不透明\n                { progress: 0.80, value: 1 },  // 保持完全不透明直到 80% 进度\n                { progress: 1.00, value: 0 }   // 在 100% 进度时淡出至完全透明\n            ];\n\n            // 3D 旋转动画参数\n            // 定义变换的关键帧\n            const transformKeyframes = {\n                kf0: { p: 0, ry: 90, rx: -5, r: 10 },     // 初始状态：从右侧旋转\n                kf1: { p: 0.50, ry: 0, rx: 0, r: 0 },      // 中间状态：面向观察者\n                kf2: { p: 1.00, ry: -90, rx: 10, r: 10 }  // 最终状态：向左侧旋转出\n            };\n\n            // 线性插值工具函数\n            // 在两个值之间进行线性插值\n            function interpolate(val1, val2, factor) {\n                return val1 + (val2 - val1) * factor; // 标准线性插值公式\n            }\n\n            // 根据总体进度和定义的停止点计算插值（例如不透明度）\n            // 根据进度获取插值后的值\n            function getInterpolatedValue(stops, overallProgress) {\n                const p = Math.max(0, Math.min(1, overallProgress)); // 将进度限制在 0 和 1 之间\n\n                // 处理边界情况：进度在第一个停止点之前或最后一个停止点之后\n                if (p <= stops[0].progress) return stops[0].value;\n                if (p >= stops[stops.length - 1].progress) return stops[stops.length - 1].value;\n\n                // 找到当前进度所在的两个停止点之间\n                for (let i = 0; i < stops.length - 1; i++) {\n                    const s1 = stops[i]; // 当前停止点\n                    const s2 = stops[i + 1]; // 下一个停止点\n                    if (p >= s1.progress && p <= s2.progress) {\n                        // 如果停止点的进度相同，则避免除以零\n                        if (s2.progress === s1.progress) return s1.value;\n                        // 计算这两个停止点之间的局部进度因子\n                        const localFactor = (p - s1.progress) / (s2.progress - s1.progress);\n                        return interpolate(s1.value, s2.value, localFactor); // 在停止点值之间进行插值\n                    }\n                }\n                return stops[stops.length - 1].value; // 后备值，理想情况下应由上述检查捕获\n            }\n\n            // 根据总体进度和变换关键帧计算当前的变换组件 (rx, ry, r)\n            // 根据总体进度获取当前的变换组件\n            function getCurrentTransformComponents(overallProgress) {\n                const p = Math.max(0, Math.min(1, overallProgress)); // 将进度限制在 0 和 1 之间\n                let ry, rx, r; // 围绕 Y、X 轴和 Z 轴（旋转）的旋转分量\n\n                const { kf0, kf1, kf2 } = transformKeyframes; // 解构关键帧\n\n                // 如果进度在第一段内（例如，整体动画的 0% 到 50%），则在 kf0 和 kf1 之间插值\n                if (p <= kf1.p) { \n                    // 计算特定于段的进度因子（在此段内为 0 到 1）\n                    const segmentDuration = kf1.p - kf0.p;\n                    const factor = (segmentDuration === 0) ? 0 : Math.max(0, Math.min(1, (p - kf0.p) / segmentDuration));\n                    \n                    // 插值每个旋转分量\n                    ry = interpolate(kf0.ry, kf1.ry, factor);\n                    rx = interpolate(kf0.rx, kf1.rx, factor);\n                    r  = interpolate(kf0.r,  kf1.r,  factor);\n                } else { // 如果进度在第二段内（例如，50% 到 100%），则在 kf1 和 kf2 之间插值\n                    // 计算特定于段的进度因子（在此段内为 0 到 1）\n                    const segmentDuration = kf2.p - kf1.p;\n                    const factor = (segmentDuration === 0) ? 0 : Math.max(0, Math.min(1, (p - kf1.p) / segmentDuration));\n\n                    // 插值每个旋转分量\n                    ry = interpolate(kf1.ry, kf2.ry, factor);\n                    rx = interpolate(kf1.rx, kf2.rx, factor);\n                    r  = interpolate(kf1.r,  kf2.r,  factor);\n                }\n                return { ry, rx, r }; // 返回计算出的旋转分量\n            }\n\n            // 基于滚动位置更新动画的主函数\n            // 更新动画状态\n            function updateAnimations() {\n                const viewportHeight = window.innerHeight; // 获取当前视口高度\n                // 遍历每个文本部分（触发元素）\n                titleItems.forEach((item, index) => {\n                    if (index >= rotates.length) return; // 安全检查：确保有对应的图片容器\n\n                    const face = rotates[index]; // 要进行动画处理的图片容器\n                    const rect = item.getBoundingClientRect(); // 获取文本部分的位置和大小\n                    const sectionHeight = item.offsetHeight; // 文本部分的高度\n\n                    // 计算当前文本部分相对于视口的滚动进度\n                    // 当部分的顶部位于视口底部时（刚进入），进度 = 0\n                    // 当部分的底部位于视口顶部时（刚退出），进度 = 1\n                    const scrollDistanceTotal = viewportHeight + sectionHeight; // 部分被视为“活动”状态的总滚动距离\n                    let currentScrollPosition = viewportHeight - rect.top; // 部分（从其顶部）已滚动进入/超过视口底部的距离\n                    \n                    let sectionProgress = 0;\n                    if (scrollDistanceTotal > 0) { // 避免除以零\n                         sectionProgress = currentScrollPosition / scrollDistanceTotal; // 将进度归一化到 0-1 范围\n                    }\n                    \n                    const clampedProgress = Math.max(0, Math.min(1, sectionProgress)); // 确保进度保持在 0-1 之间\n\n                    // 根据部分的进度获取插值后的不透明度\n                    // 获取不透明度\n                    const opacity = getInterpolatedValue(opacityStops, clampedProgress);\n\n                    // 根据部分的进度获取插值后的变换组件\n                    // 获取变换组件\n                    const { ry, rx, r } = getCurrentTransformComponents(clampedProgress);\n                    // 构建 CSS transform 字符串\n                    const transformString = `perspective(1000px) rotateY(${ry}deg) rotateX(${rx}deg) rotate(${r}deg)`;\n\n                    // 将计算出的不透明度和变换应用于图片容器\n                    // 应用样式\n                    face.style.opacity = opacity;\n                    face.style.transform = transformString;\n                });\n            }\n\n            // 用于滚动和调整大小以触发动画更新的事件监听器\n            // 添加滚动和调整大小的事件监听器\n            window.addEventListener('scroll', updateAnimations, { passive: true }); // 优化滚动监听器\n            window.addEventListener('resize', updateAnimations); // 窗口调整大小时更新动画\n            \n            // 初始调用以在页面加载时设置正确的动画状态\n            // 初始调用以在加载时设置正确的状态\n            updateAnimations();\n        });\n    </script>",
        "color_text": "",
        "color_background": "#f8f7f5",
        "gradient_background": "",
        "color_button_text": "",
        "color_button_background": "",
        "color_button_gradient": "",
        "padding_top": 72,
        "padding_bottom": 72,
        "divider": false,
        "narrow": false,
        "rounded": false
      }
    },
    "faq_f6cpTC": {
      "type": "faq",
      "blocks": {
        "question_RJHTb4": {
          "type": "question",
          "settings": {
            "title": "Frequently asked question",
            "text": "<p>Use this text to answer questions in as much detail as possible for your customers.</p>",
            "highlighted_text": "none",
            "highlighted_scribble": "circle"
          }
        },
        "question_AHHb7A": {
          "type": "question",
          "settings": {
            "title": "Frequently asked question",
            "text": "<p>Use this text to answer questions in as much detail as possible for your customers.</p>",
            "highlighted_text": "none",
            "highlighted_scribble": "circle"
          }
        },
        "question_F7LiWr": {
          "type": "question",
          "settings": {
            "title": "Frequently asked question",
            "text": "<p>Use this text to answer questions in as much detail as possible for your customers.</p>",
            "highlighted_text": "none",
            "highlighted_scribble": "circle"
          }
        }
      },
      "block_order": [
        "question_RJHTb4",
        "question_AHHb7A",
        "question_F7LiWr"
      ],
      "custom_css": [
        ".faqs.with-border .faq {border: none;}",
        "@media screen and (min-width: 1024px) {.faqs.with-border .faq {padding: 0; }}"
      ],
      "name": "t:sections.faq.presets.name",
      "settings": {
        "style": "with-border",
        "heading": "",
        "heading_size": "title-md",
        "heading_alignment": "text-left md:items-end md:flex-row",
        "heading_tag": "h2",
        "subheading": "",
        "description": "",
        "button_label": "",
        "button_link": "",
        "button_external": false,
        "button_icon": true,
        "highlighted_text": "none",
        "highlighted_scribble": "circle",
        "color_text": "",
        "color_background": "#f8f7f5",
        "gradient_background": "",
        "color_highlight": "",
        "gradient_highlight": "",
        "color_button_text": "",
        "color_button_background": "",
        "color_button_gradient": "",
        "color_overlay": "#ffffff",
        "overlay_opacity": 0,
        "padding_top": 72,
        "padding_bottom": 72,
        "divider": false,
        "narrow": false,
        "rounded": false
      }
    },
    "custom_liquid_XfdaKQ": {
      "type": "custom-liquid",
      "name": "t:sections.custom-liquid.presets.name",
      "settings": {
        "liquid": "",
        "color_text": "",
        "color_background": "#f8f7f5",
        "gradient_background": "",
        "color_button_text": "",
        "color_button_background": "",
        "color_button_gradient": "",
        "padding_top": 72,
        "padding_bottom": 72,
        "divider": false,
        "narrow": false,
        "rounded": false
      }
    },
    "custom_liquid_NRBjmJ": {
      "type": "custom-liquid",
      "name": "t:sections.custom-liquid.presets.name",
      "settings": {
        "liquid": "",
        "color_text": "",
        "color_background": "#f8f7f5",
        "gradient_background": "",
        "color_button_text": "",
        "color_button_background": "",
        "color_button_gradient": "",
        "padding_top": 72,
        "padding_bottom": 72,
        "divider": false,
        "narrow": false,
        "rounded": false
      }
    },
    "custom_liquid_L36LjG": {
      "type": "custom-liquid",
      "name": "t:sections.custom-liquid.presets.name",
      "settings": {
        "liquid": "",
        "color_text": "",
        "color_background": "#f8f7f5",
        "gradient_background": "",
        "color_button_text": "",
        "color_button_background": "",
        "color_button_gradient": "",
        "padding_top": 72,
        "padding_bottom": 72,
        "divider": false,
        "narrow": false,
        "rounded": false
      }
    }
  },
  "order": [
    "main",
    "video-with-text-overlay",
    "custom_liquid_wQbdfA",
    "faq_f6cpTC",
    "custom_liquid_XfdaKQ",
    "custom_liquid_NRBjmJ",
    "custom_liquid_L36LjG"
  ]
}
